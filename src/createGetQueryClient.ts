import ts from 'typescript';
const factory = ts.factory;
export const createGetQueryClient = () => {
	return [
		factory.createImportDeclaration(
			undefined,
			factory.createImportClause(
				false,
				undefined,
				factory.createNamedImports([
					factory.createImportSpecifier(
						false,
						undefined,
						factory.createIdentifier('QueryClient')
					),
				])
			),
			factory.createStringLiteral('@tanstack/react-query'),
			undefined
		),
		factory.createImportDeclaration(
			undefined,
			factory.createImportClause(
				false,
				undefined,
				factory.createNamedImports([
					factory.createImportSpecifier(
						false,
						undefined,
						factory.createIdentifier('cache')
					),
				])
			),
			factory.createStringLiteral('react'),
			undefined
		),
		factory.createVariableStatement(
			[factory.createToken(ts.SyntaxKind.ExportKeyword)],
			factory.createVariableDeclarationList(
				[
					factory.createVariableDeclaration(
						factory.createIdentifier('getQueryClient'),
						undefined,
						undefined,
						factory.createCallExpression(
							factory.createIdentifier('cache'),
							undefined,
							[
								factory.createArrowFunction(
									undefined,
									undefined,
									[],
									undefined,
									factory.createToken(ts.SyntaxKind.EqualsGreaterThanToken),
									factory.createNewExpression(
										factory.createIdentifier('QueryClient'),
										undefined,
										[]
									)
								),
							]
						)
					),
				],
				ts.NodeFlags.Const
			)
		),
	];
};
